#!/bin/tcsh -f
set counter=1
if ($#argv < 5) then
 echo "Please provide 4 arguments: lon_start lon_end xval basedir Eg: create_master_runscript 1 8 30L30 $TMPDIR/ esm "
 exit
endif
echo "Creating master run script for downscaling lon slice " $argv[1] "to " $argv[2]
set lon_start=$argv[1]
set lon_end=$argv[2]
set varname=$argv[3]
set method=$argv[4]
set base=$argv[5] 
set dexper=$argv[6]

set basedir=$base/master/
set rundir=$base/runscript/
set i=1
set dsuffix=$argv[7]
###############################
set tstamp = $argv[8]
set ppn = $argv[9]
#new msub option
set msub = $argv[10]
#new ends
if ( $lon_end < $lon_start ) then
 echo "Err:  Please check second argument: lon_end  should be greater than lon_start"
 exit
endif
mkdir -p $basedir 
mkdir -p $rundir
set cnt16=1
while ( $lon_start <= $lon_end ) 
 set inc=1
 set sub_lon_end=`expr $lon_start`
 set sub_lon_start=`expr $lon_start`
 while ( ( $sub_lon_end <= $lon_end ) && ( $inc < 9 ) )
	 set sub_lon_end=`expr $lon_start + $inc`
#         echo $sub_lon_end 
         set inc=`expr $inc + 1`
#         echo $inc
 end 
mkdir -p /work/$USER/fudge/stdout/	
set sub_lon_end=`expr $sub_lon_end - 1` 
#### script header
set masterloc=$basedir/master_script_${sub_lon_start}_${sub_lon_end}.${tstamp}
echo "#\!/bin/tcsh " > ${masterloc}
echo "#PBS -S /bin/tcsh " >> ${masterloc}
#echo "#PBS -d /home/a1r " >> ${masterloc}
echo "#PBS -l nodes=1:ppn=$ppn,walltime=12:00:00 " >> ${masterloc}
echo "#PBS -r y " >> ${masterloc}
echo "#PBS -j oe " >> ${masterloc}
echo "#PBS -N fudge_master " >> ${masterloc}
echo "#PBS -E " >> ${masterloc}  
echo "#PBS -o $base/log/fudge."'${MOAB_JOBNAME}.${MOAB_JOBID} '  >> ${masterloc}

echo "#PBS -q batch " >> ${masterloc}

############# notific email ##########
if($msub == 'True') then
source /usr/local/Modules/3.1.6/init/csh
module load moab
if ($?NEMSemail)  then
   set msub_string = "-m ae -M $NEMSemail"
else
   set msub_string = ""
endif
endif
######################################
#### 
#echo $masterloc
#Insert submit job here. msub $masterloc 
foreach i (`seq $sub_lon_start 1 $sub_lon_end`)
  set counter=$i
########

  if ( $i != $sub_lon_end ) then
echo "${rundir}/script.${varname}.${method}.I$counter"_"$dsuffix"."$tstamp &" >> ${masterloc}
set val=`expr $sub_lon_start + 1 \* $cnt16 \+ $cnt16 \- 1`##

########
    if($i == $val) then
       set cnt16=`expr $cnt16 + 1`
       #rm this for current set up. Used to be in place when i had 16 scripts run in parallel echo "wait" >> ${masterloc}
       endif

  else
echo "${rundir}/script.${varname}.${method}.I$counter"_"$dsuffix"."$tstamp &" >> ${masterloc}
          echo "wait" >> ${masterloc}
  endif
  if ( $i != $sub_lon_end ) then
  endif
end
set lon_start=`expr $sub_lon_end + 1`
#set lon_end=`expr $sub_lon_end`
if($msub == 'True') then
	echo "msub $masterloc"
	msub $msub_string $masterloc
else
#echo $msub
        echo "$masterloc"
endif
end
