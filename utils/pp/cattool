#!/bin/csh
######get input directory, file_prefix, output file name #############
#if (($?argv == '-h') || ($#argv < 3)) then
if (($?argv == '-h') ||($#argv < 4)) then
   echo "Usage: Please provide valid arguments"
   echo "  args = INDIR MINIFILEPREFIX OFILE AUXDIR region=region_name"
   echo "  region_name will appear in metadata and DRS 
   echo " Eg: cattool  $TMPDIR/archive/a1r/v0122v4/30lo30/ tasmax_day_GFDL-ARRMv1-xval-30lo30_amip_r2i1p1_19790101-20081231 outH3.nc /home/a1r/gitlab/ region=US48"

   exit 1
endif
set inc = $#argv # ? to #
#echo $inc
#######################################################
set prepath = $1     #input directory
set OFILE = $3
set prefix = $2
set auxfiledir = $4
set lons = $5
set lone = $6
set lats = $7
set late = $8
set grid = $9 #gridspec file, typically the spatial mask
set varname = $10 
#######################################
#echo $prepath
#echo $prefix
#echo $OFILE

while ( $inc > 0 )
 set opts = $argv[$inc] 
 if ( $opts == 'region=US48') then
  @ inc1 = $inc + 1  
  set region = 'US48' 
  set lons = 748
  set lone = 941
  set lats = 454
  set late = 567
  set c = 75 ## c is used in while loop  
  set cend = 93 ## see while #93
  set lonfile = ${auxfiledir}/us48lon.nc
  echo "Selected region: "$region ",Longitude index range- "$lons":"$lone  
 else if ( $opts == 'region=global') then
   @ inc1 = $inc + 1
   set region = 'global'
   set lons = 1
   set lone = 1152
   set c = $lons
   set cend = 114
   set lonfile = ${auxfiledir}/globallon.nc
 else if ( $opts =~ region*) then # for any other region like RR, use common grid
   echo $opts	 
   echo "..Using passed lons $lons,lone $lone,lats $lats,late $late"
   set region = `echo "$opts" | cut -d'=' -f2`  #$opts |cut -d'=' -f1 
   echo "$region"
   set cstart = 1 
   set ccheck = 1
   set cend = 0 
   ############ removing hardwires assumptions about file prefixes ###############
   foreach ival (`seq $lons 1 $lone`)
           @ cmod = $ival % 10
        if ($cmod != 0)then
           if($ccheck != 0) then
		set chead = `echo $ival | sed s'/.$//' `
	        set sub1 = $cmod 
		set sub2 = $sub1
                set ccheck = 0
	   else
		if($ccheck == 0) then
	        	set tmphead = `echo $ival | sed s'/.$//' `
			if ($tmphead == $chead) then
				set sub2 = $cmod
			endif
		endif
		set ctail = `echo $ival | sed s'/.$//' `

	   endif 
        else
	  if($cstart != 0) then
                set c = `echo "$ival" | cut -d'0' -f1`
		set cstart = 0	
	  else	
		set clast = `echo "$ival" | cut -d'0' -f1`
	        set clastsub1 = $cmod 
	  endif
	endif
   	#set c = 19
   	#set cend = 36 
   end
## c is actually cstart 
@ cend = $clast - 1

if($cend <= $clast) then
	echo "all points covered, disregard ctail"
	set ctail = "na"
endif
   echo $chead"[$sub1]:"$chead"[$sub2]",$ctail,$c":"$cend,$clast"[$clastsub1]"
 endif
  @ inc = $inc - 1 
#######################################################
#set prepath = $1     #input directory
#set OFILE = $3
#set prefix = $2
#set auxfiledir = $4  
#######################################
#echo $prepath
#echo $prefix
#echo $OFILE

if (! -d $prepath) then
   echo "Error: input directory does not exist"
   exit 1
endif

if (-e $OFILE) then
   echo "ERROR: output file exists - can not overwrite"
   exit 1
endif

########################
if($prepath == "") then
 echo "Please provide input_directory. Quitting now.."
 exit 1
endif
########################

###############################
if ( $region == 'global' ) then
## global spl
 set argpath = "$prepath/${prefix}.[1-9].nc"
else if ( $region == 'US48' ) then
 set argpath = "$prepath/${prefix}.I74[8-9]_J${lats}-${late}.nc" 
else
#   echo $chead"[$sub1]:"$chead"[$sub2]",$ctail,$c,$cend"[$cendsub1]"
#18[1]:18[9],na,19,37[0]
echo "start"
 set argpath = "$prepath/${prefix}.I${chead}[$sub1-$sub2]_J${lats}-${late}.nc"
#echo $argpath
endif

#cecho "while starts.. "

while ( $c <= $cend)
#	echo "loop $c"
        set argpath = `echo $argpath $prepath/${prefix}.I${c}[0-9]_J${lats}-${late}.nc`
        @ c++
end
#cecho "end while"

if ( $region == 'global' ) then
 set argpath = `echo $argpath $prepath/${prefix}.115[0-2].nc`
else if ( $region == 'US48' ) then
 set argpath = `echo $argpath $prepath/${prefix}.I94[0-1]_J${lats}-${late}.nc`
else
 set argpath = `echo $argpath $prepath/${prefix}.I${clast}[${clastsub1}]_J${lats}-${late}.nc`
endif 

echo "continue.."
##source /home/a1r/ds/bin/cattool/auxfiles/loadit
#source /home/a1r/GESDF/pp/auxfiles/loadit

source ${auxfiledir}/loadit
#echo "ncecat  $argpath $OFILE"
ncecat -v ${varname} -h $argpath $OFILE 
#tooooo slow ncwa -a record $OFILE $OFILE # Remove new degenerate record dimension
###########################################################################
#echo "ncecat -h $argpath $OFILE"
echo "catting ..done"
echo "record arrangement in progress.."
#ncpdq -O -h -a time,lat,record $OFILE $OFILE 
#ncpdq -O -h -a t,record,time $OFILE $OFILE
#cncks -A -h --hdr -h -v lon $lonfile $OFILE

ncpdq -O -h -v ${varname} -a time,lat,lon,record $OFILE $OFILE
#add lat lon bounds info
#ncks -A -h -v lat,lat_bnds $bndsfile $OFILE
#ncks -A -h -v lon,lon_bnds $bndsfile $OFILE
ncrename -h  -v lon,lon1 $OFILE 
ncrename -h -d lon,lon1 $OFILE
ncks -A -h -v lat,lat_bnds,lon,lon_bnds $grid $OFILE 
#### take time_bnds,i_offset,j_offset from the first minifile
ncks -A -h -v time_bnds,i_offset,j_offset "$prepath/${prefix}.I${lons}_J${lats}-${late}.nc" $OFILE

